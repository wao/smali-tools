#!/usr/bin/env ruby 

require 'date'

token_list=%w[ 
DIR_FIELD DIR_METHOD END_METHOD DIR_CLASS DIR_LOCAL DIR_LOCALS 
DIR_SOURCE DIR_ANNOTATION END_ANNOTATION DIR_SUPER CLASSNAME 
ID LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE COLON 
SEMICOLON PRIVATE PUBLIC SLASH VALUE STRING ASSIGN DOTDOT 
COMMA LIT8 LIT16 ARROW REGISTER FIELDNAME RETURN_TYPE_ID TYPE_ID 
CONSTRUCTOR
]

###start instruction
instruction_list=%w[INS_NOP INS_MOVE INS_MOVE_FROM16 INS_MOVE_16 INS_MOVE_WIDE INS_MOVE_WIDE_FROM16 INS_MOVE_WIDE_16 INS_MOVE_OBJECT INS_MOVE_OBJECT_FROM16 INS_MOVE_OBJECT_16 INS_MOVE_RESULT INS_MOVE_RESULT_WIDE INS_MOVE_RESULT_OBJECT INS_MOVE_EXCEPTION INS_RETURN_VOID INS_RETURN INS_RETURN_WIDE INS_RETURN_OBJECT INS_CONST_4 INS_CONST_16 INS_CONST INS_CONST_HIGH16 INS_CONST_WIDE_16 INS_CONST_WIDE_32 INS_CONST_WIDE INS_CONST_WIDE_HIGH16 INS_CONST_STRING INS_CONST_STRING_JUMBO INS_CONST_CLASS INS_MONITOR_ENTER INS_MONITOR_EXIT INS_CHECK_CAST INS_INSTANCE_OF INS_ARRAY_LENGTH INS_NEW_INSTANCE INS_NEW_ARRAY INS_FILLED_NEW_ARRAY INS_FILLED_NEW_ARRAY_RANGE INS_FILL_ARRAY_DATA INS_THROW INS_GOTO INS_GOTO_16 INS_GOTO_32 INS_PACKED_SWITCH INS_SPARSE_SWITCH INS_CMPL_FLOAT INS_CMPG_FLOAT INS_CMPL_DOUBLE INS_CMPG_DOUBLE INS_CMP_LONG INS_IF_EQ INS_IF_NE INS_IF_LT INS_IF_GE INS_IF_GT INS_IF_LE INS_IF_EQZ INS_IF_NEZ INS_IF_LTZ INS_IF_GEZ INS_IF_GTZ INS_IF_LEZ INS_AGET INS_AGET_WIDE INS_AGET_OBJECT INS_AGET_BOOLEAN INS_AGET_BYTE INS_AGET_CHAR INS_AGET_SHORT INS_APUT INS_APUT_WIDE INS_APUT_OBJECT INS_APUT_BOOLEAN INS_APUT_BYTE INS_APUT_CHAR INS_APUT_SHORT INS_IGET INS_IGET_WIDE INS_IGET_OBJECT INS_IGET_BOOLEAN INS_IGET_BYTE INS_IGET_CHAR INS_IGET_SHORT INS_IPUT INS_IPUT_WIDE INS_IPUT_OBJECT INS_IPUT_BOOLEAN INS_IPUT_BYTE INS_IPUT_CHAR INS_IPUT_SHORT INS_SGET INS_SGET_WIDE INS_SGET_OBJECT INS_SGET_BOOLEAN INS_SGET_BYTE INS_SGET_CHAR INS_SGET_SHORT INS_SPUT INS_SPUT_WIDE INS_SPUT_OBJECT INS_SPUT_BOOLEAN INS_SPUT_BYTE INS_SPUT_CHAR INS_SPUT_SHORT INS_INVOKE_VIRTUAL INS_INVOKE_SUPER INS_INVOKE_DIRECT INS_INVOKE_STATIC INS_INVOKE_INTERFACE INS_INVOKE_VIRTUAL_RANGE INS_INVOKE_SUPER_RANGE INS_INVOKE_DIRECT_RANGE INS_INVOKE_STATIC_RANGE INS_INVOKE_INTERFACE_RANGE INS_NEG_INT INS_NOT_INT INS_NEG_LONG INS_NOT_LONG INS_NEG_FLOAT INS_NEG_DOUBLE INS_INT_TO_LONG INS_INT_TO_FLOAT INS_INT_TO_DOUBLE INS_LONG_TO_INT INS_LONG_TO_FLOAT INS_LONG_TO_DOUBLE INS_FLOAT_TO_INT INS_FLOAT_TO_LONG INS_FLOAT_TO_DOUBLE INS_DOUBLE_TO_INT INS_DOUBLE_TO_LONG INS_DOUBLE_TO_FLOAT INS_INT_TO_BYTE INS_INT_TO_CHAR INS_INT_TO_SHORT INS_ADD_INT INS_SUB_INT INS_MUL_INT INS_DIV_INT INS_REM_INT INS_AND_INT INS_OR_INT INS_XOR_INT INS_SHL_INT INS_SHR_INT INS_USHR_INT INS_ADD_LONG INS_SUB_LONG INS_MUL_LONG INS_DIV_LONG INS_REM_LONG INS_AND_LONG INS_OR_LONG INS_XOR_LONG INS_SHL_LONG INS_SHR_LONG INS_USHR_LONG INS_ADD_FLOAT INS_SUB_FLOAT INS_MUL_FLOAT INS_DIV_FLOAT INS_REM_FLOAT INS_ADD_DOUBLE INS_SUB_DOUBLE INS_MUL_DOUBLE INS_DIV_DOUBLE INS_REM_DOUBLE INS_ADD_INT_2ADDR INS_SUB_INT_2ADDR INS_MUL_INT_2ADDR INS_DIV_INT_2ADDR INS_REM_INT_2ADDR INS_AND_INT_2ADDR INS_OR_INT_2ADDR INS_XOR_INT_2ADDR INS_SHL_INT_2ADDR INS_SHR_INT_2ADDR INS_USHR_INT_2ADDR INS_ADD_LONG_2ADDR INS_SUB_LONG_2ADDR INS_MUL_LONG_2ADDR INS_DIV_LONG_2ADDR INS_REM_LONG_2ADDR INS_AND_LONG_2ADDR INS_OR_LONG_2ADDR INS_XOR_LONG_2ADDR INS_SHL_LONG_2ADDR INS_SHR_LONG_2ADDR INS_USHR_LONG_2ADDR INS_ADD_FLOAT_2ADDR INS_SUB_FLOAT_2ADDR INS_MUL_FLOAT_2ADDR INS_DIV_FLOAT_2ADDR INS_REM_FLOAT_2ADDR INS_ADD_DOUBLE_2ADDR INS_SUB_DOUBLE_2ADDR INS_MUL_DOUBLE_2ADDR INS_DIV_DOUBLE_2ADDR INS_REM_DOUBLE_2ADDR INS_ADD_INT_LIT16 INS_SUB_INT_LIT16 INS_MUL_INT_LIT16 INS_DIV_INT_LIT16 INS_REM_INT_LIT16 INS_AND_INT_LIT16 INS_OR_INT_LIT16 INS_XOR_INT_LIT16 INS_ADD_INT_LIT8 INS_SUB_INT_LIT8 INS_MUL_INT_LIT8 INS_DIV_INT_LIT8 INS_REM_INT_LIT8 INS_AND_INT_LIT8 INS_OR_INT_LIT8 INS_XOR_INT_LIT8 INS_SHL_INT_LIT8 INS_SHR_INT_LIT8 INS_USHR_INT_LIT8 INS_EXECUTE_INLINE INS_INVOKE_DIRECT_EMPTY INS_IGET_QUICK INS_IGET_WIDE_QUICK INS_IGET_OBJECT_QUICK INS_IPUT_QUICK INS_IPUT_WIDE_QUICK INS_IPUT_OBJECT_QUICK INS_INVOKE_VIRTUAL_QUICK INS_INVOKE_VIRTUAL_QUICK_RANGE INS_INVOKE_SUPER_QUICK INS_INVOKE_SUPER_QUICK_RANGE]
###end instruction

token_list = token_list + instruction_list

File.open("Re2cTokenTypes.txt", "w") do |txt|
    txt.puts "Re2c //Generated at #{DateTime.now} from tokengen.rb"

    File.open("Re2cTokenType.hpp", "w") do |hpp|

        hpp.puts "/*Generated at #{DateTime.now} from tokengen.rb*/" 
        hpp.puts "#ifndef __RE2CTOKENTYPE_HPP__"
        hpp.puts "#define __RE2CTOKENTYPE_HPP__"

        num = 100
        token_list.each do |it|
            txt.puts "#{it}=#{num}"
            hpp.puts "#define #{it} #{num}"
            num += 1
        end

        hpp.puts "#endif /*__RE2CTOKENTYPE_HPP__*/"
    end
end


